{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","toggleSortType","type","isSortedOrReversed","className","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4BE,IAAME,EAAU,WACrB,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA1BD,SACLC,EACAL,EACAE,GAEA,IAAME,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKL,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAK7C,OAAOV,EACHE,EAAaS,UACbT,EAOiBU,CAAkBlB,EAAiBI,EAAUE,GAE5Da,EAAiB,SAACC,GACtB,OACIf,EADGD,IAAagB,EACJrB,EAASI,KACTiB,IAoBZC,EAAqBf,GAAcF,IAAaL,EAASI,KAE/D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEF,KAAK,SACLG,QAxBmB,kBACzBJ,EAAepB,EAASW,WAwBlBY,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASW,WALxC,iCAWA,wBACEU,KAAK,SACLG,QA/BmB,kBACzBJ,EAAepB,EAASgB,SA+BlBO,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASgB,SALxC,4BAWA,wBACEK,KAAK,SACLG,QAtCc,WACpBhB,GAAeD,IAsCTgB,UAAWE,IACT,oBACA,CAAE,YAAalB,IALnB,qBAWCe,GACC,wBACED,KAAK,SACLG,QA9CU,WAClBlB,EAAYN,EAASI,MACrBI,GAAc,IA6CNe,UAAU,4BAHZ,sBAUJ,6BACGd,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7c00a624.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const toggleSortType = (type: SortType) => {\n    return sortType === type\n      ? setSortType(SortType.NONE)\n      : setSortType(type);\n  };\n\n  const handleSortByAlphab = () => (\n    toggleSortType(SortType.ALPHABET)\n  );\n\n  const handleSortByLength = () => (\n    toggleSortType(SortType.LENGTH)\n  );\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const isSortedOrReversed = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={handleSortByAlphab}\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleSortByLength}\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverse}\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {isSortedOrReversed && (\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}